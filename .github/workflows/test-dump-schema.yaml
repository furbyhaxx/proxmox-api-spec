name: Proxmox Schema Dump [WIP]

on:
  workflow_dispatch:

#permissions:
#  contents: write
env:
  DISTRO: stretch
  PROXMOX_VERSION: 5.4-2

jobs:
  dump_schema:
    name: Dump API Schema
    runs-on: ubuntu-latest
    outputs:
      distro: ${{ steps.prepare.outputs.distro }}
      proxmox_version: ${{ steps.prepare.outputs.proxmox_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          
      - name: Prepare
        id: prepare
        run: |
          echo "distro=${{ env.DISTRO }}" >> "$GITHUB_OUTPUT"
          echo "proxmox_version=${{ env.PROXMOX_VERSION }}" >> "$GITHUB_OUTPUT"
          
      - name: Setup Docker Container
        run: |
          DISTRO="${{ steps.prepare.outputs.distro }}"
          PROXMOX_VERSION="${{ steps.prepare.outputs.proxmox_version }}"
          docker_tag="proxmox-dump-schema:${PROXMOX_VERSION}"
          schema_file="proxmox-api-schema-${PROXMOX_VERSION}.json"

          echo "Building container for distro=$DISTRO and version=$PROXMOX_VERSION"

          # Build Docker image
          docker build --platform=linux/amd64 \
            --tag "proxmox-api" \
            --build-arg DISTRO="${DISTRO}" \
            --build-arg PROXMOX_VERSION="${PROXMOX_VERSION}" \
            "./dump-schema"

      - name: Run container and extract API
        id: extract_api
        run: |
          DISTRO="${{ steps.prepare.outputs.distro }}"
          PROXMOX_VERSION="${{ steps.prepare.outputs.proxmox_version }}"

          echo "Running container and dumping API schema"

          # Run the container, executing the Perl script inside
          docker run --rm proxmox-api \
            perl /app/scripts/extractapi.pl > "proxmox-ve-api-${PROXMOX_VERSION}.json"

          echo "Generated proxmox-ve-api-${PROXMOX_VERSION}.json"

          echo ""

          echo "$(cat "proxmox-ve-api-${PROXMOX_VERSION}.json")"

